package components

import "github.com/Evalua-Tu-Profe/etp-api"
import "strconv"
import "fmt"

type ProfessorCardProps struct {
	Professor         *etp.Professor
	School            *etp.School
	RatingsCount      int
	Distribution      []*etp.RatingDistribution
	RatingAvg         float64
	WouldTakeAgainAvg float64
	DifficultyAvg     float64
}

templ ProfessorCard(props ProfessorCardProps) {
	<div class="card lg:card-side shadow-xl">
		<div class="card-body">
			<div class="flex flex-col items-center">
				<h2 class="text-xl card-title md:text-4xl">{ props.Professor.FullName }</h2>
				<a class="link link-primary text-center" href={ templ.SafeURL("/school/" + fmt.Sprintf("%d", props.School.ID)) }>{ props.School.Name }</a>
				<p>{ props.Professor.Department.Name }</p>
				<div class="flex flex-col items-center gap-4 mt-6">
					<div class="flex flex-col items-center gap-2">
						<p class="text-4xl font-semibold">
							{ strconv.FormatFloat(props.RatingAvg, 'f', 1, 64) } / 5
						</p>
						<p class="text-md text-primary">Reseña promedio</p>
					</div>
				</div>
				<div class="flex flex-col items-center gap-4 mt-2">
					<div class="flex flex-col items-center gap-2">
						<p class="text-4xl font-semibold">{ strconv.FormatFloat(props.WouldTakeAgainAvg * 100, 'f', 0, 64) }%</p>
						<p class="text-md text-primary">Tomaría de nuevo</p>
					</div>
				</div>
				<div class="flex flex-col items-center gap-4 mt-2">
					<div class="flex flex-col items-center gap-2">
						<p class="text-4xl font-semibold">{ strconv.FormatFloat(props.DifficultyAvg, 'f', 2, 64) }</p>
						<p class="text-md text-primary">Dificultad</p>
					</div>
				</div>
				<div class="flex flex-col md:flex-row gap-1 md:gap-2 text-center md:mt-4">
					for _, tag := range props.Professor.PopularTags {
						<div class="badge badge-outline h-auto badge-lg mt-2 md:mt-0 md:mr-4">
							{ tag.Name }
						</div>
					}
				</div>
			</div>
			<div class="divider"></div>
			<div>
				<p class="font-semibold mb-2">Distribución</p>
				for i:= len(props.Distribution) - 1; i >= 0; i-- {
					<div class="flex items-center gap-1">
						<span class="w-4 text-sm">{ strconv.Itoa(i+1) }</span>
						<progress class="progress flex-grow" value={ strconv.FormatInt(int64(props.Distribution[i].Count), 10) } max={ strconv.FormatInt(int64(props.RatingsCount), 10) }></progress>
						<span class="w-8 text-sm text-right">
							{ fmt.Sprintf("%.0f%%", (float64(props.Distribution[i].Count)/float64(props.RatingsCount)) * 100) }
						</span>
					</div>
				}
			</div>
			<div class="flex justify-end w-100 mt-2">
				<a class="btn btn-info w-full md:w-auto" href={ templ.SafeURL("/professor/" + fmt.Sprintf("%d/add-review", props.Professor.ID)) }>
					<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
						<path stroke-linecap="round" stroke-linejoin="round" d="m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10"></path>
					</svg>
					Evalua este profesor
				</a>
			</div>
		</div>
	</div>
}
